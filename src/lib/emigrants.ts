export type EmigrantProfile = {
  id: string;
  name: string;
  slug: string;
  portraitEmoji?: string;
  startYear?: number;
  endYear?: number | null; // null = still in exile
  durationDaysEstimate?: number; // if exact years are unknown
  returned: boolean;
  blurb: string;
  sourceUrl?: string;
};

// NOTE: The entries below are simplified and approximate, intended for a playful match, not strict biography.
// Provide sources where convenient and keep text neutral.
export const EMIGRANTS: EmigrantProfile[] = [
  {
    id: "yakub-kolas",
    name: "–Ø–∫—É–± –ö–æ–ª–∞—Å",
    slug: "yakub-kolas",
    portraitEmoji: "üìö",
    // Known period of forced exile away from homeland (~1908‚Äì1911)
    startYear: 1908,
    endYear: 1911,
    returned: true,
    blurb:
      "–¢—ã —û —ç–º—ñ–≥—Ä–∞—Ü—ã—ñ –ø—Ä—ã–∫–ª–∞–¥–Ω–∞, —è–∫ –Ø–∫—É–± –ö–æ–ª–∞—Å —É –ø–∞—á–∞—Ç–∫—É –•–• —Å—Ç–∞–≥–æ–¥–∑—å–¥–∑—è. –Å–Ω –≤—è—Ä–Ω—É—û—Å—è —ñ —Å—Ç–∞—û –∞–¥–Ω—ã–º –∑ –≥–∞–ª–æ—û–Ω—ã—Ö –ø—ñ—Å—å–º–µ–Ω—å–Ω—ñ–∫–∞—û –ë–µ–ª–∞—Ä—É—Å—ñ.",
    sourceUrl: "https://be.wikipedia.org/wiki/%D0%AF%D0%BA%D1%83%D0%B1_%D0%9A%D0%BE%D0%BB%D0%B0%D1%81",
  },
  {
    id: "zianon-pazniak",
    name: "–ó—è–Ω–æ–Ω –ü–∞–∑—å–Ω—è–∫",
    slug: "zianon-pazniak",
    portraitEmoji: "üö∂",
    startYear: 1996,
    endYear: null, // —É —ç–º—ñ–≥—Ä–∞—Ü—ã—ñ –º–Ω–æ–≥—ñ—è –≥–∞–¥—ã
    durationDaysEstimate: (2020 - 1996) * 365, // –∏—Å–ø–æ–ª—å–∑—É–µ–º 2020 –∫–∞–∫ –∫–æ–Ω–µ—á–Ω—ã–π –≥–æ–¥
    returned: false,
    blurb:
      "–ü–∞ –ø—Ä–∞—Ü—è–≥–ª–∞—Å—Ü—ñ –≥—ç—Ç–∞ –±–ª—ñ–∑–∫–∞ –¥–∞ –ó—è–Ω–æ–Ω–∞ –ü–∞–∑—å–Ω—è–∫–∞ ‚Äî –¥–æ—û–≥–∞—è —ç–º—ñ–≥—Ä–∞—Ü—ã—è —ñ –ø–∞—Å—å–ª—è–¥–æ—û–Ω–∞—è –ø–∞–∑—ñ—Ü—ã—è.",
    sourceUrl: "https://be.wikipedia.org/wiki/%D0%97%D1%8F%D0%BD%D0%BE%D0%BD_%D0%9F%D0%B0%D0%B7%D1%8C%D0%BD%D1%8F%D0%BA",
  },
];

// Extend with external JSON seed if present
import seed from "./emigrants.data.json";
export const ALL_EMIGRANTS: EmigrantProfile[] = [
  ...EMIGRANTS,
  ...seed,
];

export function estimateDurationDays(profile: EmigrantProfile): number {
  if (typeof profile.durationDaysEstimate === "number") {
    return profile.durationDaysEstimate;
  }
  if (profile.startYear && profile.endYear) {
    const years = profile.endYear - profile.startYear;
    return Math.max(0, Math.round(years * 365.25));
  }
  if (profile.startYear && !profile.endYear) {
    // –î–ª—è —Ç–µ—Ö, –∫—Ç–æ –¥–æ —Å–∏—Ö –ø–æ—Ä –≤ —ç–º–∏–≥—Ä–∞—Ü–∏–∏, —Å—á–∏—Ç–∞–µ–º –¥–æ —Ç–µ–∫—É—â–µ–≥–æ –≥–æ–¥–∞
    const currentYear = new Date().getFullYear();
    const years = currentYear - profile.startYear;
    return Math.max(0, Math.round(years * 365.25));
  }
  return 0;
}

export function findNearestByDays(daysInExile: number): EmigrantProfile {
  const pool = ALL_EMIGRANTS.length ? ALL_EMIGRANTS : EMIGRANTS;
  let best: EmigrantProfile = pool[0];
  let bestDiff = Number.POSITIVE_INFINITY;
  for (const profile of pool) {
    const d = Math.abs(estimateDurationDays(profile) - daysInExile);
    if (d < bestDiff) {
      best = profile;
      bestDiff = d;
    }
  }
  return best;
}

export function rankByDays(daysInExile: number, max: number = ALL_EMIGRANTS.length): EmigrantProfile[] {
  const pool = ALL_EMIGRANTS.length ? ALL_EMIGRANTS : EMIGRANTS;
  return [...pool]
    .map((p) => ({ 
      p, 
      d: Math.abs(estimateDurationDays(p) - daysInExile),
      // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–º —ç–º–∏–≥—Ä–∞–Ω—Ç–∞–º (–¥–æ 2020) + –ö–∞–ª–µ—Å–Ω–∏–∫–æ–≤–∞ –∫–∞–∫ –æ—Å–æ–±—ã–π —Å–ª—É—á–∞–π
      // –ù–æ –∏—Å–∫–ª—é—á–∞–µ–º –ó—è–Ω–æ–Ω–∞ –ü–æ–∑–Ω—è–∫–∞ - –æ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–±—ã—á–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–æ–π
      isHistorical: ((p.startYear || 2020) < 2020 || p.slug === "maria-kalesnikava") && p.slug !== "zianon-pazniak"
    }))
    .sort((a, b) => {
      // –°–Ω–∞—á–∞–ª–∞ —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –∏—Å—Ç–æ—Ä–∏—á–Ω–æ—Å—Ç–∏ (–∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –∏–¥—É—Ç –ø–µ—Ä–≤—ã–º–∏)
      if (a.isHistorical !== b.isHistorical) {
        return b.isHistorical ? 1 : -1;
      }
      // –ó–∞—Ç–µ–º –ø–æ –±–ª–∏–∑–æ—Å—Ç–∏ –¥–Ω–µ–π
      return a.d - b.d;
    })
    .slice(0, Math.max(1, Math.min(max, pool.length)))
    .map((x) => x.p);
}


